#import <Foundation/Foundation.h>
#import "CSContact.h"
#import "CSApi.h"

/**
* ClickSend v3 API
*  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
*
* OpenAPI spec version: 3.1
* Contact: support@clicksend.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CSContactApi: NSObject <CSApi>

extern NSString* kCSContactApiErrorDomain;
extern NSInteger kCSContactApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CSApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Delete a contact
/// Delete a contact
///
/// @param listId List ID
/// @param contactId Contact ID
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsContactsByListIdAndContactIdDeleteWithListId: (NSNumber*) listId
    contactId: (NSNumber*) contactId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Get a specific contact
/// Get a specific contact
///
/// @param listId Your contact list id you want to access.
/// @param contactId Your contact id you want to access.
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsContactsByListIdAndContactIdGetWithListId: (NSNumber*) listId
    contactId: (NSNumber*) contactId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Update specific contact
/// Update specific contact
///
/// @param listId Contact list id
/// @param contactId Contact ID
/// @param contact Contact model
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsContactsByListIdAndContactIdPutWithListId: (NSNumber*) listId
    contactId: (NSNumber*) contactId
    contact: (CSContact*) contact
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Get all contacts in a list
/// Get all contacts in a list
///
/// @param listId Contact list ID
/// @param page Page number (optional) (default to 1)
/// @param limit Number of records per page (optional) (default to 10)
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsContactsByListIdGetWithListId: (NSNumber*) listId
    page: (NSNumber*) page
    limit: (NSNumber*) limit
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Create new contact
/// Create new contact
///
/// @param contact Contact model
/// @param listId List id
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsContactsByListIdPostWithContact: (CSContact*) contact
    listId: (NSNumber*) listId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Remove all opted out contacts
/// Remove all opted out contacts
///
/// @param listId Your list id
/// @param optOutListId Your opt out list id
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsRemoveOptedOutContactsByListIdAndOptOutListIdPutWithListId: (NSNumber*) listId
    optOutListId: (NSNumber*) optOutListId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Transfer contact to another list
/// Transfer contact to another list
///
/// @param fromListId List ID for list that contains contact.
/// @param contactId Contact ID
/// @param toListId List ID for list you want to transfer contact to.
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) listsTransferContactPutWithFromListId: (NSNumber*) fromListId
    contactId: (NSNumber*) contactId
    toListId: (NSNumber*) toListId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
