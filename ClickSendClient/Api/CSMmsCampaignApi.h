#import <Foundation/Foundation.h>
#import "CSMmsCampaign.h"
#import "CSApi.h"

/**
* ClickSend v3 API
*  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
*
* OpenAPI spec version: 3.1
* Contact: support@clicksend.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CSMmsCampaignApi: NSObject <CSApi>

extern NSString* kCSMmsCampaignApiErrorDomain;
extern NSInteger kCSMmsCampaignApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CSApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get specific mms campaign
/// Get specific mms campaign
///
/// @param mmsCampaignId ID of MMS campaign to retrieve
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignByMmsCampaignIdGetWithMmsCampaignId: (NSNumber*) mmsCampaignId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Update mms campaign
/// Update mms campaign
///
/// @param mmsCampaignId ID of MMS campaign to update
/// @param campaign MmsCampaign model
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignsByMmsCampaignIdPutWithMmsCampaignId: (NSNumber*) mmsCampaignId
    campaign: (CSMmsCampaign*) campaign
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Cancel mms campaign
/// Cancel sms campaign
///
/// @param mmsCampaignId ID of MMS Campaign to cancel
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignsCancelByMmsCampaignIdPutWithMmsCampaignId: (NSNumber*) mmsCampaignId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Get list of mms campaigns
/// Get list of mms campaigns
///
/// @param page Page number (optional) (default to 1)
/// @param limit Number of records per page (optional) (default to 10)
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignsGetWithPage: (NSNumber*) page
    limit: (NSNumber*) limit
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Calculate price for mms campaign
/// Calculate price for sms campaign
///
/// @param campaign MmsCampaign model
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignsPricePostWithCampaign: (CSMmsCampaign*) campaign
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Create mms campaign
/// Create mms campaign
///
/// @param campaign MmsCampaign model
/// 
///  code:200 message:"SUCCESS",
///  code:400 message:"BAD_REQUEST",
///  code:401 message:"UNAUTHORIZED",
///  code:403 message:"FORBIDDEN",
///  code:404 message:"NOT_FOUND",
///  code:405 message:"METHOD_NOT_FOUND",
///  code:429 message:"TOO_MANY_REQUESTS",
///  code:0 message:"INTERNAL_SERVER_ERROR"
///
/// @return NSString*
-(NSURLSessionTask*) mmsCampaignsSendPostWithCampaign: (CSMmsCampaign*) campaign
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
